* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    

}

.container {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    min-height: 100vh;
    width: 100%;
    --blue: rgba(20, 20, 255, 1);
    --orange: rgba(233, 113, 34, 1);
    --yellow: rgba(233, 230, 34, 1);
    background: url(https://i.ibb.co/Q96Q8X7/ZcVzSn.png);   
    background-position: center;
    background-attachment: fixed;
    background-repeat: no-repeat;
    background-size: cover;
    position: fixed;
    top: 0;
    bottom: 0;
    
    
}


.cubo {
    width: 200px;
    height: 200px;
    transform-style: preserve-3d;
    position: relative;
    animation: cubo 7s linear infinite;
    transition: 1s;
    
    

}

@keyframes cubo {
    from {
        transform: rotateX(-30deg) rotateY(0);
    }

    to {
        transform: rotateX(-30deg) rotateY(360deg);
    }
}

.cubo span {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    background: linear-gradient(90deg, rgba(240, 240, 240, .2), var(--blue));
    box-shadow: 0 0 5px inset #ccc, 0 0 50px inset #ccc;
    height: 100%;
    width: 100%;
    transition: 1s;
}

.cubo span:nth-of-type(1) {
    transform: rotateY(0) translateZ(100px);
}

.cubo span:nth-of-type(2) {
    transform: rotateY(90deg) translateZ(100px);
}

.cubo span:nth-of-type(3) {
    transform: rotateY(180deg) translateZ(100px);
}

.cubo span:nth-of-type(4) {
    transform: rotateY(270deg) translateZ(100px);
}

.cubo .blue::before {
    content: "const cambiaColor = (colorDiv, colorVariable) => { colorDiv.forEach(color => {color.addEventListener()}  ";
    text-align: center;
    font-size: .8em; 
    position: absolute;
    top: 50%;
    left: 50%; 
    transform: translate(-50%, -50%); 
    color:#FFF  ;
    text-shadow: 0 0 5px #ccc, 2px 4px 10px #000, 4px 8px 20px #000;      

}

.cubo .orange::before {
    content: "e.key == 'a' ? colorElegido = '#FF0002': e.key == 's' ? colorElegido = '#889999' colorElegido = '#000'";
    text-align: center;
    font-size: .8em; 
    position: absolute;
    top: 50%;
    left: 50%; 
    transform: translate(-50%, -50%); 
    color:#FFF  ;
    text-shadow: 0 0 5px #ccc, 2px 4px 10px #000, 4px 8px 20px #000;      

}

.cubo .yellow::before {
    content: "forEach(cubo => { cubo.style.cursor = 'pointer';}) cambiaColor(blueDivs, '--blue'); cambiaColor(orangeDivs, '--orange'); cambiaColor(yellowDivs, '--yellow');";
    text-align: center;
    font-size: .8em; 
    position: absolute;
    top: 50%;
    left: 50%; 
    transform: translate(-50%, -50%); 
    color:#FFF  ;
    text-shadow: 0 0 5px #ccc, 2px 4px 10px #000, 4px 8px 20px #000;      

}

.top {
    width: 200px;
    height: 200px;
    background: linear-gradient( rgba(255, 255, 255, .2), var(--blue));
    box-shadow: 0 0 20px #FFF inset, 0 0 50px #FFF inset;
    transform: rotateX(90deg) translateZ(100px);
}


.bottom {
    width: 200px;
    height: 200px;
    background: radial-gradient(rgba(255, 255, 255, .2), var(--blue));
    transform: rotateX(90deg) translateZ(100px);
    box-shadow: 0 0 5px #000, 0 0 25px #000, 0 0 50px #000, 0 0 200px #000;
             
}

.cubo .orange {
    background: linear-gradient(90deg, rgba(240, 240, 240, .2), var(--orange));
}

.cubo .yellow {
    background: linear-gradient(90deg, rgba(240, 240, 240, .2), var(--yellow));
}


